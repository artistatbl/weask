generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id               String         @id @default(uuid())
  createdtime      DateTime       @default(now())
  email            String         @unique
  firstname        String?
  lastname         String?
  gender           String?
  profileimageurl  String?
  clerkId          String         @unique
  subscription     String?
  chatMessages     ChatMessage[]
  searchHistories  SearchHistory[]

  @@index([clerkId])
}

model ChatMessage {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  sessionId   String
  role        String
  content     String
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, sessionId])
}

model SearchHistory {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  sessionId   String
  domain      String
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, domain])
}

model Subscription {
  id                      String   @id @default(uuid())
  createdtime             DateTime @default(now())
  subscriptionId          String   @unique
  stripeuserId            String
  status                  String
  startdate               String
  enddate                 String?
  planid                  String
  defaultpaymentmethodid  String?
  email                   String
  clerkId                 String

  @@index([clerkId, subscriptionId])
}



model Payment {
  id               String   @id @default(uuid())
  createdAt        DateTime @default(now())
  stripeId         String
  email            String
  amount           Decimal
  paymentTime      DateTime
  currency         String
  clerkId          String
  customerDetails  Json
  paymentIntent    String

  @@index([clerkId, stripeId])
}



model SubscriptionPlan {
  id           String   @id @default(uuid())
  createdAt    DateTime @default(now())
  planId       String   @unique
  name         String
  description  String
  amount       Decimal
  currency     String
  interval     String
}

model Invoice {
  id              String   @id @default(uuid())
  createdAt       DateTime @default(now())
  invoiceId       String   @unique
  subscriptionId  String
  amountPaid      Decimal
  amountDue       Decimal?
  currency        String
  status          String
  email           String
  clerkId         String?

  @@index([clerkId, invoiceId])
}

